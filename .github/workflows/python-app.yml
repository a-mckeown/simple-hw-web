name: Python application with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - uses: actions/checkout@v4

    # Step 2: Set up Python environment
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Step 4: Lint with flake8
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Step 5: Debug test discovery
    - name: Debug test discovery
      run: pytest --collect-only

    # Step 6: Run tests
    - name: Run tests
      run: |
        export PYTHONPATH=$GITHUB_WORKSPACE
        pytest

    # Step 7: Build the Docker image
    - name: Build Docker image
      run: |
        IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
        IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/simple_web_app
        docker build -t $IMAGE_NAME:$IMAGE_TAG .

    - name: Set IMAGE_TAG
      run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV


    # Step 8: Run the Docker container
    - name: Run Docker container
      run: |
        docker run -d -p 5000:5000 --name simple_web_app_container ghcr.io/${{ github.repository_owner }}/simple_web_app:$IMAGE_TAG

    # Step 9: Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Step 10: Push Docker image to GitHub Container Registry
    - name: Push Docker image
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/simple_web_app
        IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)

        echo "Pushing image: $IMAGE_NAME:$IMAGE_TAG"
        docker tag simple_web_app $IMAGE_NAME:$IMAGE_TAG
        docker push $IMAGE_NAME:$IMAGE_TAG

        echo "Tagging latest image"
        docker tag simple_web_app $IMAGE_NAME:latest
        docker push $IMAGE_NAME:latest

    # Step 11: Update Kubernetes manifest with new image tag
    - name: Update Kubernetes manifest
      run: |
        IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
        sed -i "s|ghcr.io/${{ github.repository_owner }}/simple_web_app:.*|ghcr.io/${{ github.repository_owner }}/simple_web_app:$IMAGE_TAG|" k8s/deployment.yaml

        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add k8s/deployment.yaml
        git commit -m "Update image tag to $IMAGE_TAG"
        git push

  
